# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class S2tPost200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, transcription=None):  # noqa: E501
        """S2tPost200Response - a model defined in OpenAPI

        :param transcription: The transcription of this S2tPost200Response.  # noqa: E501
        :type transcription: str
        """
        self.openapi_types = {
            'transcription': str
        }

        self.attribute_map = {
            'transcription': 'transcription'
        }

        self._transcription = transcription

    @classmethod
    def from_dict(cls, dikt) -> 'S2tPost200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _s2t_post_200_response of this S2tPost200Response.  # noqa: E501
        :rtype: S2tPost200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def transcription(self):
        """Gets the transcription of this S2tPost200Response.


        :return: The transcription of this S2tPost200Response.
        :rtype: str
        """
        return self._transcription

    @transcription.setter
    def transcription(self, transcription):
        """Sets the transcription of this S2tPost200Response.


        :param transcription: The transcription of this S2tPost200Response.
        :type transcription: str
        """
        if transcription is None:
            raise ValueError("Invalid value for `transcription`, must not be `None`")  # noqa: E501

        self._transcription = transcription
