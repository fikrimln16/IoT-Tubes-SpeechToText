# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.s2t_post_request_audio import S2tPostRequestAudio
from openapi_server.models.s2t_post_request_config import S2tPostRequestConfig
from openapi_server import util

from openapi_server.models.s2t_post_request_audio import S2tPostRequestAudio  # noqa: E501
from openapi_server.models.s2t_post_request_config import S2tPostRequestConfig  # noqa: E501

class S2tPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config=None, audio=None):  # noqa: E501
        """S2tPostRequest - a model defined in OpenAPI

        :param config: The config of this S2tPostRequest.  # noqa: E501
        :type config: S2tPostRequestConfig
        :param audio: The audio of this S2tPostRequest.  # noqa: E501
        :type audio: S2tPostRequestAudio
        """
        self.openapi_types = {
            'config': S2tPostRequestConfig,
            'audio': S2tPostRequestAudio
        }

        self.attribute_map = {
            'config': 'config',
            'audio': 'audio'
        }

        self._config = config
        self._audio = audio

    @classmethod
    def from_dict(cls, dikt) -> 'S2tPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _s2t_post_request of this S2tPostRequest.  # noqa: E501
        :rtype: S2tPostRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config(self):
        """Gets the config of this S2tPostRequest.


        :return: The config of this S2tPostRequest.
        :rtype: S2tPostRequestConfig
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this S2tPostRequest.


        :param config: The config of this S2tPostRequest.
        :type config: S2tPostRequestConfig
        """

        self._config = config

    @property
    def audio(self):
        """Gets the audio of this S2tPostRequest.


        :return: The audio of this S2tPostRequest.
        :rtype: S2tPostRequestAudio
        """
        return self._audio

    @audio.setter
    def audio(self, audio):
        """Sets the audio of this S2tPostRequest.


        :param audio: The audio of this S2tPostRequest.
        :type audio: S2tPostRequestAudio
        """
        if audio is None:
            raise ValueError("Invalid value for `audio`, must not be `None`")  # noqa: E501

        self._audio = audio
